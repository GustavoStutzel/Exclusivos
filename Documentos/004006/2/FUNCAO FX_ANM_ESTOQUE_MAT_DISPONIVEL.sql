USE [TESTE_SOMA]
GO

/****** Object:  UserDefinedFunction [dbo].[FX_ANM_ESTOQUE_MAT_DISP]    Script Date: 05/04/2016 19:22:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




ALTER FUNCTION [dbo].[FX_ANM_ESTOQUE_MAT_DISP](@PEDIDO_PROD CHAR(8) = '', @PEDIDO_PILOT CHAR(12)='',
@WHERE_FILIAL           VARCHAR(25), @WHERE_MATERIAL		  VARCHAR(11), @WHERE_COR_MATERIAL		VARCHAR(10)  )

RETURNS @RETESTMAT TABLE 
( FILIAL            VARCHAR(25),
  MATERIAL			VARCHAR(11), 
  COR_MATERIAL		VARCHAR(10) , 
  QTDE_ESTOQUE		NUMERIC(10,3), 
  QTDE_EM_RESERVA	NUMERIC(9 ,3),
  QTDE_PEDIDO_PILOT	NUMERIC(9 ,3), 
  QTDE_ESTOQUE_DISP	NUMERIC(10,3) 
 )
AS
BEGIN

	-------------------------------------------------------------------------------------------------------------------------------------------------
	-- Função para montagem do resultado do Estque Disponível                                                      --
	-------------------------------------------------------------------------------------------------------------------------------------------------
	
	-------------------------------------------------------------------------------------------------------------------------------------------------

	DECLARE @FILIAL           VARCHAR(25),@MATERIAL		  VARCHAR(11)  , @COR_MATERIAL		VARCHAR(10)  , @QTDE_ESTOQUE		NUMERIC(10,3), 
			@QTDE_EM_RESERVA  NUMERIC(9 ,3), @QTDE_PEDIDO_PILOT	NUMERIC(9 ,3), @QTDE_ESTOQUE_DISP	NUMERIC(10,3) 

	DECLARE TMP_ESTMAT CURSOR LOCAL FAST_FORWARD FOR
	-------------------------------------------------------------------------------------------------------------------------------------------------
	-- SELECT --
	-------------------------------------------------------------------------------------------------------------------------------------------------
	
			
	SELECT FIL.FILIAL,A.MATERIAL,A.COR_MATERIAL,
	ISNULL(B.QTDE_ESTOQUE,0) AS QTDE_ESTOQUE,
	SUM(ISNULL(C.RESERVA,0)+ISNULL(E.RESERVA,0)+ISNULL(CP.RESERVA,0)) AS QTDE_EM_RESERVA,
	SUM(ISNULL(D.QTDE_ENTREGAR,0)) AS QTDE_PEDIDO_PILOT, 
	ISNULL(B.QTDE_ESTOQUE,0) - SUM(ISNULL(C.RESERVA,0)+ISNULL(E.RESERVA,0)+ISNULL(CP.RESERVA,0)) - SUM(ISNULL(D.QTDE_ENTREGAR,0)) AS QTDE_ESTOQUE_DISP 
	FROM 
	(SELECT * FROM FILIAIS (NOLOCK)  WHERE FILIAL = @WHERE_FILIAL ) FIL
		LEFT JOIN 
		MATERIAIS_CORES (NOLOCK) A ON 1=1

		
		---- INCLUIDO, TRATAMENTO DIFERENTE PARA A FARM
		--JOIN dbo.FX_WANM_MATERIAIS() AS TRAZ_DO_PARAM_TRATA_AV
		--ON A.MATERIAL = TRAZ_DO_PARAM_TRATA_AV.MATERIAL
		----
	
--af_brands  - ismara - 08/01/15 - substituindo o tratamento acima - ao inves de função, fazendo uma consulta
JOIN (
			SELECT A.*,TIPO AS TIPO_MATERIAL FROM dbo.MATERIAIS A
			WHERE (TIPO NOT LIKE ('%AVIAMENTO%') AND 
				(SELECT CASE WHEN RTRIM(ISNULL(B.VALOR_ATUAL_USER,A.VALOR_ATUAL)) = '.T.' THEN '0' 
							WHEN RTRIM(ISNULL(B.VALOR_ATUAL_USER,A.VALOR_ATUAL)) = '.F.' THEN '1'  
							ELSE RTRIM(ISNULL(B.VALOR_ATUAL_USER,A.VALOR_ATUAL)) END  
				FROM PARAMETROS A LEFT JOIN (SELECT A.* FROM PARAMETROS_USERS A JOIN USERS B ON A.USUARIO = B.USUARIO WHERE LX_SYSTEM_USER = SYSTEM_USER) B ON A.PARAMETRO = B.PARAMETRO               
				WHERE A.PARAMETRO = 'ANM_TRATA_AV_DIFERENTE')= 0 )
			OR (SELECT CASE WHEN RTRIM(ISNULL(B.VALOR_ATUAL_USER,A.VALOR_ATUAL)) = '.T.' THEN '0'  
							WHEN RTRIM(ISNULL(B.VALOR_ATUAL_USER,A.VALOR_ATUAL)) = '.F.' THEN '1'  
							ELSE RTRIM(ISNULL(B.VALOR_ATUAL_USER,A.VALOR_ATUAL)) END  
				FROM PARAMETROS A LEFT JOIN ( SELECT A.* FROM PARAMETROS_USERS A JOIN USERS B ON A.USUARIO = B.USUARIO WHERE LX_SYSTEM_USER = SYSTEM_USER) B ON A.PARAMETRO = B.PARAMETRO               
				WHERE A.PARAMETRO = 'ANM_TRATA_AV_DIFERENTE' )<> 0
) AS TRAZ_DO_PARAM_TRATA_AV
		ON A.MATERIAL = TRAZ_DO_PARAM_TRATA_AV.MATERIAL

		
		LEFT JOIN ( SELECT FILIAL,MATERIAL,COR_MATERIAL,SUM(QTDE_ESTOQUE) AS QTDE_ESTOQUE 
					FROM  ESTOQUE_MATERIAIS (NOLOCK)	
								---- QTDE EM ESTOQUE NA DISTRIBUIDORA							----
				--WHERE 
				--( FILIAL = (SELECT DBO.FX_ANM_PARAMETRO_USER('ANM_FILIAL_ARMAZEM') ) )  AND 
				      --QTDE_ESTOQUE > 0 
				      --WHERE MATERIAL = '01010047' AND COR_MATERIAL = '0003' --AND A.FILIAL= 'FABULA - MATRIZ'
				GROUP BY  FILIAL,MATERIAL,COR_MATERIAL ) B
	ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL  AND FIL.FILIAL = B.FILIAL
		
			
			--- RESERVAS DE OS ENVIADAS PARA ALMOX ---
		LEFT JOIN  ( SELECT C.FILIAL,MATERIAL,COR_MATERIAL,SUM(RESERVA) RESERVA  FROM PRODUCAO_RESERVA  (NOLOCK)A				---- QTDE EM RESERVA ( ORDEM DE SERVIÇO E PEDIDO DE PILOTAGEM ) ----
						JOIN (SELECT DISTINCT ORDEM_SERVICO, ORDEM_PRODUCAO FROM PRODUCAO_OS_TAREFAS (NOLOCK)) B
						ON A.ORDEM_PRODUCAO = B.ORDEM_PRODUCAO
							---- SALDO DO ESTOQUE DIMINUINDO A RESERVA DA OS QUE ESTA SENDO ANALISADA --  05-01-2014 --
							JOIN (SELECT DISTINCT FILIAL,ORDEM_SERVICO, ANM_STATUS_ALMOX FROM PRODUCAO_ORDEM_SERVICO (NOLOCK)) C
							ON B.ORDEM_SERVICO = C.ORDEM_SERVICO					
							---- SALDO DO ESTOQUE DIMINUINDO A RESERVA DA OS QUE ESTA SENDO ANALISADA --  05-01-2014 --
					 WHERE C.ANM_STATUS_ALMOX = '1-ENVIADO PARA ALMOX'			---- FILTRA SOMENTE OS ENVIADA PARA ALMOX E STATUS = SEPARA		----
					 AND A.ANM_RESERVA_ALMOX = 1 AND RESERVA > 0 AND
						       B.ORDEM_SERVICO <> @PEDIDO_PROD 
					 GROUP BY C.FILIAL,MATERIAL,COR_MATERIAL) C					 
		ON A.MATERIAL = C.MATERIAL AND A.COR_MATERIAL = C.COR_MATERIAL AND FIL.FILIAL = C.FILIAL

						--- RESERVA DE COMPRAS DE PRODUTO ENVIADAS PARA ALMOX ---
						LEFT JOIN  ( SELECT FILIAL,MATERIAL,COR_MATERIAL,SUM(RESERVA) RESERVA  FROM PRODUCAO_RESERVA  (NOLOCK)A				---- QTDE EM RESERVA ( ORDEM DE SERVIÇO E PEDIDO DE PILOTAGEM ) ----
								JOIN (SELECT PEDIDO, ANM_FILIAL_MATERIAL AS FILIAL, ANM_STATUS_ALMOX, STATUS_COMPRA FROM COMPRAS (NOLOCK) WHERE TABELA_FILHA = 'COMPRAS_PRODUTO') B
								ON A.ORDEM_PRODUCAO = B.PEDIDO
							 WHERE B.ANM_STATUS_ALMOX = '1-ENVIADO PARA ALMOX'			---- FILTRA SOMENTE OS ENVIADA PARA ALMOX E STATUS = SEPARA		----
							 AND A.ANM_RESERVA_ALMOX = 1 AND RESERVA > 0 AND STATUS_COMPRA <> 'C' AND 
									   B.PEDIDO <> @PEDIDO_PROD 
							 GROUP BY B.FILIAL,MATERIAL,COR_MATERIAL) CP					 
							ON A.MATERIAL = CP.MATERIAL AND A.COR_MATERIAL = CP.COR_MATERIAL AND FIL.FILIAL = CP.FILIAL
				
							--- RESERVA DE PEDIDOS DE PILOTAGEM EMITIDOS ATRAVÉS DA TELA DE PEDIDOS DE PILOTAGEM ---
						LEFT JOIN ( SELECT FILIAL_DIGITACAO AS FILIAL,MATERIAL,
										COR_MATERIAL,SUM(QTDE_ENTREGAR) QTDE_ENTREGAR FROM VENDAS  (NOLOCK) A						---- QTDE EM RESERVA DE PEDIDOS DE PILOTAGENS					----
										JOIN VENDAS_MATERIAL  (NOLOCK) B
										ON A.PEDIDO = B.PEDIDO
									WHERE A.STATUS = 'A' AND B.QTDE_ENTREGAR > 0 AND
											  A.PEDIDO <> @PEDIDO_PILOT 
									  --AND FILIAL = (SELECT DBO.FX_ANM_PARAMETRO_USER('ANM_FILIAL_ARMAZEM') )
									GROUP BY FILIAL_DIGITACAO,MATERIAL,COR_MATERIAL ) D								----					
						ON A.MATERIAL = D.MATERIAL AND A.COR_MATERIAL = D.COR_MATERIAL AND FIL.FILIAL = D.FILIAL
				
				
								--- RESERVA DE MATERIAL PARA SER BENEFICIADO NOS PEDIDOS DE COMPRAS DO OPERACIONAL ---
								LEFT JOIN (SELECT FILIAL_A_ENTREGAR FILIAL,MATERIAL,COR_MATERIAL,
											SUM(RESERVA) AS RESERVA 
											FROM PRODUCAO_RESERVA (NOLOCK) A 
												   JOIN COMPRAS (NOLOCK) B
												   ON A.ORDEM_PRODUCAO = B.PEDIDO
												  WHERE RESERVA > 0 AND MATAR_SALDO_RESERVA = 0 AND STATUS_COMPRA <> 'C'  AND B.TABELA_FILHA = 'COMPRAS_MATERIAL' 
												  AND isnull(B.ANM_STATUS_ALMOX,'1-ENVIADO PARA ALMOX') = '1-ENVIADO PARA ALMOX'
												  AND B.PEDIDO <> @PEDIDO_PROD
												  GROUP BY FILIAL_A_ENTREGAR,MATERIAL,COR_MATERIAL) E
												  ON A.MATERIAL = E.MATERIAL AND A.COR_MATERIAL = E.COR_MATERIAL AND FIL.FILIAL = E.FILIAL
								
								
								--LEFT JOIN (SELECT FILIAL_A_ENTREGAR FILIAL,MATERIAL,COR_MATERIAL,
								--			SUM( CASE WHEN TABELA_FILHA = 'COMPRAS_PRODUTO' AND ISNULL(ANM_STATUS_ALMOX,'') <> '1-ENVIADO PARA ALMOX' THEN 0 ELSE RESERVA END) AS RESERVA 
								--			FROM PRODUCAO_RESERVA (NOLOCK) A 
								--				   JOIN COMPRAS (NOLOCK) B
								--				   ON A.ORDEM_PRODUCAO = B.PEDIDO
								--				  WHERE RESERVA > 0 AND MATAR_SALDO_RESERVA = 0 AND STATUS_COMPRA <> 'C'  AND B.PEDIDO <> @PEDIDO_PROD
								--				  GROUP BY FILIAL_A_ENTREGAR,MATERIAL,COR_MATERIAL) E
								--				  ON A.MATERIAL = E.MATERIAL AND A.COR_MATERIAL = E.COR_MATERIAL AND FIL.FILIAL = E.FILIAL
							--LEFT JOIN ( SELECT FILIAL_A_ENTREGAR FILIAL,MATERIAL,COR_MATERIAL,SUM(RESERVA) AS RESERVA FROM PRODUCAO_RESERVA (NOLOCK) A 
							--			JOIN COMPRAS (NOLOCK) B
							--			ON A.ORDEM_PRODUCAO = B.PEDIDO
							--		WHERE RESERVA > 0 AND MATAR_SALDO_RESERVA = 0 AND STATUS_COMPRA <> 'C'  AND B.PEDIDO <> @PEDIDO_PROD
							--		GROUP BY FILIAL_A_ENTREGAR,MATERIAL,COR_MATERIAL ) E											
							--ON A.MATERIAL = E.MATERIAL AND A.COR_MATERIAL = E.COR_MATERIAL AND FIL.FILIAL = E.FILIAL
				  
	WHERE A.MATERIAL = @WHERE_MATERIAL	AND A.COR_MATERIAL = @WHERE_COR_MATERIAL AND FIL.FILIAL = @WHERE_FILIAL 				
	GROUP BY FIL.FILIAL,A.MATERIAL,A.COR_MATERIAL,B.QTDE_ESTOQUE		


	OPEN TMP_ESTMAT


	FETCH NEXT FROM TMP_ESTMAT INTO @FILIAL, @MATERIAL, @COR_MATERIAL, @QTDE_ESTOQUE, @QTDE_EM_RESERVA, @QTDE_PEDIDO_PILOT, @QTDE_ESTOQUE_DISP

	WHILE @@FETCH_STATUS = 0
	BEGIN
		

		INSERT INTO @RETESTMAT ( FILIAL, MATERIAL, COR_MATERIAL, QTDE_ESTOQUE, QTDE_EM_RESERVA, QTDE_PEDIDO_PILOT, QTDE_ESTOQUE_DISP )
		VALUES ( @FILIAL,@MATERIAL, @COR_MATERIAL, @QTDE_ESTOQUE, @QTDE_EM_RESERVA, @QTDE_PEDIDO_PILOT, @QTDE_ESTOQUE_DISP  )

		FETCH NEXT FROM TMP_ESTMAT INTO @FILIAL,@MATERIAL, @COR_MATERIAL, @QTDE_ESTOQUE, @QTDE_EM_RESERVA, @QTDE_PEDIDO_PILOT, @QTDE_ESTOQUE_DISP

	END

	CLOSE TMP_ESTMAT
	DEALLOCATE TMP_ESTMAT

	RETURN

END



















GO


